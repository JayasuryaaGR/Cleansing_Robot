<launch>

  <!-- Robot pose -->
  <arg name="x_robot" default="0"/>
  <arg name="y_robot" default="0"/>
  <arg name="z_robot" default="0"/>
  <arg name="roll_robot" default="0"/>
  <arg name="pitch_robot" default="0"/>
  <arg name="yaw_robot" default="0"/>

  <!-- House pose -->
  <arg name="x_house" default="7.5"/>
  <arg name="y_house" default="2.9"/>
  <arg name="z_house" default="0"/>
  <arg name="roll_house" default="0"/>
  <arg name="pitch_house" default="0"/>
  <arg name="yaw_house" default="0"/>

  <!-- Entrance pose -->
  <arg name="x_entrance" default="4.82"/>
  <arg name="y_entrance" default="2.866"/>
  <arg name="z_entrance" default="0"/>
  <arg name="roll_entrance" default="0"/>
  <arg name="pitch_entrance" default="0"/>
  <arg name="yaw_entrance" default="0.0025"/>

  <!-- Path1 pose -->
  <arg name="x_path1" default="-0.085"/>
  <arg name="y_path1" default="-0.72"/>
  <arg name="z_path1" default="0"/>
  <arg name="roll_path1" default="0"/>
  <arg name="pitch_path1" default="0"/>
  <arg name="yaw_path1" default="0"/>

  <!-- Robot Dustbin -->
  <arg name="x_robot_dustbin" default="8.3"/>
  <arg name="y_robot_dustbin" default="1.1"/>
  <arg name="z_robot_dustbin" default="0.125"/>
  <arg name="roll_robot_dustbin" default="0"/>
  <arg name="pitch_robot_dustbin" default="0"/>
  <arg name="yaw_robot_dustbin" default="0"/>

  <!-- Other Dustbin -->
  <arg name="x_other_dustbin" default="8.0"/>
  <arg name="y_other_dustbin" default="3.6"/>
  <arg name="z_other_dustbin" default="0.25"/>
  <arg name="roll_other_dustbin" default="0"/>
  <arg name="pitch_other_dustbin" default="0"/>
  <arg name="yaw_other_dustbin" default="0"/>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find artpark_description)/config/robot_control.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/artpark_robot" 
    args="trash_holder_joint_effort_controller
          arm_base_joint_effort_controller
          body_joint_effort_controller
          front_left_wheel_caster_joint_effort_controller
          front_right_wheel_caster_joint_effort_controller
          rear_left_wheel_caster_joint_effort_controller
          rear_right_wheel_caster_joint_effort_controller
          joint_state_controller
          "/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch" />

  <param name="house" command="$(find xacro)/xacro '$(find artpark_gazebo)/buildings/house.sdf'" />
  <node name="house_spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-param house -sdf -model Artpark_House
          -x $(arg x_house) -y $(arg y_house) -z $(arg z_house)
          -R $(arg roll_house) -P $(arg pitch_house) -Y $(arg yaw_house)" />

  <param name="robot_dustbin" command="$(find xacro)/xacro '$(find artpark_gazebo)/buildings/robot_dustbin.sdf'" />
  <node name="robot_dustbin_spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-param robot_dustbin -sdf -model Robot_Dustbin
          -x $(arg x_robot_dustbin) -y $(arg y_robot_dustbin) -z $(arg z_robot_dustbin)
          -R $(arg roll_robot_dustbin) -P $(arg pitch_robot_dustbin) -Y $(arg yaw_robot_dustbin)" />
  
  <param name="other_dustbin" command="$(find xacro)/xacro '$(find artpark_gazebo)/buildings/other_dustbin.sdf'" />
  <node name="other_dustbin_spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-param other_dustbin -sdf -model Other_Dustbin
          -x $(arg x_other_dustbin) -y $(arg y_other_dustbin) -z $(arg z_other_dustbin)
          -R $(arg roll_other_dustbin) -P $(arg pitch_other_dustbin) -Y $(arg yaw_other_dustbin)" />

  <param name="entrance" command="$(find xacro)/xacro '$(find artpark_gazebo)/buildings/entrance.sdf'" />
  <node name="entrance_spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-param entrance -sdf -model Entrance
          -x $(arg x_entrance) -y $(arg y_entrance) -z $(arg z_entrance)
          -R $(arg roll_entrance) -P $(arg pitch_entrance) -Y $(arg yaw_entrance)" />

  <param name="path1" command="$(find xacro)/xacro '$(find artpark_gazebo)/buildings/path1.sdf'" />
  <node name="path1_spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-param path1 -sdf -model Path1
          -x $(arg x_path1) -y $(arg y_path1) -z $(arg z_path1)
          -R $(arg roll_path1) -P $(arg pitch_path1) -Y $(arg yaw_path1)" />

  <param name="robot_description" command="$(find xacro)/xacro '$(find artpark_description)/urdf/artpark_robot.xacro'" />
  <node name="robot_spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-param robot_description -urdf -model artpark_robot
          -x $(arg x_robot) -y $(arg y_robot) -z $(arg z_robot)
          -R $(arg roll_robot) -P $(arg pitch_robot) -Y $(arg yaw_robot)" />
  
  <!-- <node pkg="artpark_description" type="test.py" name="test" /> -->
  
  <!-- convert joint states to TF transforms for rviz, etc -->
  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/artpark_robot/joint_states" />
  </node>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find artpark_description)/rviz/artpark.rviz"/> -->


</launch>